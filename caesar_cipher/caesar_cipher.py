import nltk
nltk.download('words')
from nltk.corpus import words
word_list = words.words()

alphaset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'

def encrypt(plain_text, key):
    """
    Return the encrypted text generated by shifting input plain text characters left or right according to the key value provided (left for negative values, right for positive values); e.g., 'Hello World', 2 returns 'Jgnnq Yqtnf'.
    """
    nonlocal alphaset
    p_text = plain_text
    shift = key
    pass
    for char in p_text:
        print(char)
        #match character to element in alphaset, shift the index of that character and return the resulting character - append to 'encrypted' or other such variable.
        
    
    
def decrypt(encrypted_text, key):
    """
    Return the decrypted text generated by shifting input encrypted text characters left or right opposite to the key value provided (right for negative values, left for positive values); e.g., 'Jgnnq Yqtnf', 2 returns 'Hello World'.
    """
    pass

# def shifted(key):
#     """
#     docstring here
#     """
#     pass


def code_cracker(encrypted_text):
    """
    Return the decrypted text generated by shifting input encrypted text characters left or right until the highest match to valid plain text is found.
    """
    pass




if __name__ == "__main__":
    encrypt('Hello World', 2)

